{"ast":null,"code":"import _defineProperty from \"/Users/Rene.Murrell/Desktop/flight/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/Rene.Murrell/Desktop/flight/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Rene.Murrell/Desktop/flight/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Rene.Murrell/Desktop/flight/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Rene.Murrell/Desktop/flight/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Rene.Murrell/Desktop/flight/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _objectSpread from \"/Users/Rene.Murrell/Desktop/flight/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/Rene.Murrell/Desktop/flight/src/components/drawer.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nvar drawerWidth = 240;\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      flexGrow: 1\n    },\n    appFrame: {\n      height: 430,\n      zIndex: 1,\n      overflow: 'hidden',\n      position: 'relative',\n      display: 'flex',\n      width: '100%'\n    },\n    appBar: {\n      position: 'absolute',\n      transition: theme.transitions.create(['margin', 'width'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen\n      })\n    },\n    appBarShift: {\n      width: \"calc(100% - \".concat(drawerWidth, \"px)\"),\n      transition: theme.transitions.create(['margin', 'width'], {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen\n      })\n    },\n    'appBarShift-left': {\n      marginLeft: drawerWidth\n    },\n    'appBarShift-right': {\n      marginRight: drawerWidth\n    },\n    menuButton: {\n      marginLeft: 12,\n      marginRight: 20\n    },\n    hide: {\n      display: 'none'\n    },\n    drawerPaper: {\n      position: 'relative',\n      width: drawerWidth\n    },\n    drawerHeader: _objectSpread({\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'flex-end',\n      padding: '0 8px'\n    }, theme.mixins.toolbar),\n    content: {\n      flexGrow: 1,\n      backgroundColor: theme.palette.background.default,\n      padding: theme.spacing.unit * 3,\n      transition: theme.transitions.create('margin', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen\n      })\n    },\n    'content-left': {\n      marginLeft: -drawerWidth\n    },\n    'content-right': {\n      marginRight: -drawerWidth\n    },\n    contentShift: {\n      transition: theme.transitions.create('margin', {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen\n      })\n    },\n    'contentShift-left': {\n      marginLeft: 0\n    },\n    'contentShift-right': {\n      marginRight: 0\n    }\n  };\n};\n\nvar PersistentDrawer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PersistentDrawer, _React$Component);\n\n  function PersistentDrawer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, PersistentDrawer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PersistentDrawer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      open: false,\n      anchor: 'left'\n    };\n\n    _this.handleDrawerOpen = function () {\n      _this.setState({\n        open: true\n      });\n    };\n\n    _this.handleDrawerClose = function () {\n      _this.setState({\n        open: false\n      });\n    };\n\n    _this.handleChangeAnchor = function (event) {\n      _this.setState({\n        anchor: event.target.value\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(PersistentDrawer, [{\n    key: \"render\",\n    value: function render() {\n      var _classNames, _classNames2;\n\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          theme = _this$props.theme;\n      var _this$state = this.state,\n          anchor = _this$state.anchor,\n          open = _this$state.open;\n      var drawer = React.createElement(Drawer, {\n        variant: \"persistent\",\n        anchor: anchor,\n        open: open,\n        classes: {\n          paper: classes.drawerPaper\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.drawerHeader,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(IconButton, {\n        onClick: this.handleDrawerClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, theme.direction === 'rtl' ? React.createElement(ChevronRightIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }) : React.createElement(ChevronLeftIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }))), React.createElement(Divider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }), React.createElement(List, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, mailFolderListItems), React.createElement(Divider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }), React.createElement(List, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, otherMailFolderListItems));\n      var before = null;\n      var after = null;\n\n      if (anchor === 'left') {\n        before = drawer;\n      } else {\n        after = drawer;\n      }\n\n      return React.createElement(\"div\", {\n        className: classes.root,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        id: \"persistent-anchor\",\n        select: true,\n        label: \"Anchor\",\n        value: anchor,\n        onChange: this.handleChangeAnchor,\n        margin: \"normal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(MenuItem, {\n        value: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, \"left\"), React.createElement(MenuItem, {\n        value: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, \"right\")), React.createElement(\"div\", {\n        className: classes.appFrame,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(AppBar, {\n        className: classNames(classes.appBar, (_classNames = {}, _defineProperty(_classNames, classes.appBarShift, open), _defineProperty(_classNames, classes[\"appBarShift-\".concat(anchor)], open), _classNames)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(Toolbar, {\n        disableGutters: !open,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, React.createElement(IconButton, {\n        color: \"inherit\",\n        \"aria-label\": \"Open drawer\",\n        onClick: this.handleDrawerOpen,\n        className: classNames(classes.menuButton, open && classes.hide),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, React.createElement(MenuIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      })), React.createElement(Typography, {\n        variant: \"h6\",\n        color: \"inherit\",\n        noWrap: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, \"Persistent drawer\"))), before, React.createElement(\"main\", {\n        className: classNames(classes.content, classes[\"content-\".concat(anchor)], (_classNames2 = {}, _defineProperty(_classNames2, classes.contentShift, open), _defineProperty(_classNames2, classes[\"contentShift-\".concat(anchor)], open), _classNames2)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.drawerHeader,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }), React.createElement(Typography, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, 'You think water moves fast? You should see ice.')), after));\n    }\n  }]);\n\n  return PersistentDrawer;\n}(React.Component);\n\nPersistentDrawer.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired\n};\nexport default withStyles(styles, {\n  withTheme: true\n})(PersistentDrawer);","map":{"version":3,"sources":["/Users/Rene.Murrell/Desktop/flight/src/components/drawer.js"],"names":["React","PropTypes","classNames","withStyles","Drawer","AppBar","Toolbar","List","MenuItem","Typography","TextField","Divider","IconButton","MenuIcon","ChevronLeftIcon","ChevronRightIcon","drawerWidth","styles","theme","root","flexGrow","appFrame","height","zIndex","overflow","position","display","width","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","easeOut","enteringScreen","marginLeft","marginRight","menuButton","hide","drawerPaper","drawerHeader","alignItems","justifyContent","padding","mixins","toolbar","content","backgroundColor","palette","background","default","spacing","unit","contentShift","PersistentDrawer","state","open","anchor","handleDrawerOpen","setState","handleDrawerClose","handleChangeAnchor","event","target","value","props","classes","drawer","paper","direction","mailFolderListItems","otherMailFolderListItems","before","after","Component","propTypes","object","isRequired","withTheme"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\n\n\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  appFrame: {\n    height: 430,\n    zIndex: 1,\n    overflow: 'hidden',\n    position: 'relative',\n    display: 'flex',\n    width: '100%',\n  },\n  appBar: {\n    position: 'absolute',\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  'appBarShift-left': {\n    marginLeft: drawerWidth,\n  },\n  'appBarShift-right': {\n    marginRight: drawerWidth,\n  },\n  menuButton: {\n    marginLeft: 12,\n    marginRight: 20,\n  },\n  hide: {\n    display: 'none',\n  },\n  drawerPaper: {\n    position: 'relative',\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  content: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.default,\n    padding: theme.spacing.unit * 3,\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  'content-left': {\n    marginLeft: -drawerWidth,\n  },\n  'content-right': {\n    marginRight: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  'contentShift-left': {\n    marginLeft: 0,\n  },\n  'contentShift-right': {\n    marginRight: 0,\n  },\n});\n\nclass PersistentDrawer extends React.Component {\n  state = {\n    open: false,\n    anchor: 'left',\n  };\n\n  handleDrawerOpen = () => {\n    this.setState({ open: true });\n  };\n\n  handleDrawerClose = () => {\n    this.setState({ open: false });\n  };\n\n  handleChangeAnchor = event => {\n    this.setState({\n      anchor: event.target.value,\n    });\n  };\n\n  render() {\n    const { classes, theme } = this.props;\n    const { anchor, open } = this.state;\n\n    const drawer = (\n      <Drawer\n        variant=\"persistent\"\n        anchor={anchor}\n        open={open}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <div className={classes.drawerHeader}>\n          <IconButton onClick={this.handleDrawerClose}>\n            {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\n          </IconButton>\n        </div>\n        <Divider />\n        <List>{mailFolderListItems}</List>\n        <Divider />\n        <List>{otherMailFolderListItems}</List>\n      </Drawer>\n    );\n\n    let before = null;\n    let after = null;\n\n    if (anchor === 'left') {\n      before = drawer;\n    } else {\n      after = drawer;\n    }\n\n    return (\n      <div className={classes.root}>\n        <TextField\n          id=\"persistent-anchor\"\n          select\n          label=\"Anchor\"\n          value={anchor}\n          onChange={this.handleChangeAnchor}\n          margin=\"normal\"\n        >\n          <MenuItem value=\"left\">left</MenuItem>\n          <MenuItem value=\"right\">right</MenuItem>\n        </TextField>\n        <div className={classes.appFrame}>\n          <AppBar\n            className={classNames(classes.appBar, {\n              [classes.appBarShift]: open,\n              [classes[`appBarShift-${anchor}`]]: open,\n            })}\n          >\n            <Toolbar disableGutters={!open}>\n              <IconButton\n                color=\"inherit\"\n                aria-label=\"Open drawer\"\n                onClick={this.handleDrawerOpen}\n                className={classNames(classes.menuButton, open && classes.hide)}\n              >\n                <MenuIcon />\n              </IconButton>\n              <Typography variant=\"h6\" color=\"inherit\" noWrap>\n                Persistent drawer\n              </Typography>\n            </Toolbar>\n          </AppBar>\n          {before}\n          <main\n            className={classNames(classes.content, classes[`content-${anchor}`], {\n              [classes.contentShift]: open,\n              [classes[`contentShift-${anchor}`]]: open,\n            })}\n          >\n            <div className={classes.drawerHeader} />\n            <Typography>{'You think water moves fast? You should see ice.'}</Typography>\n          </main>\n          {after}\n        </div>\n      </div>\n    );\n  }\n}\n\nPersistentDrawer.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(PersistentDrawer);"]},"metadata":{},"sourceType":"module"}